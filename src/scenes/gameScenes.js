/**
 * Модуль gameScenes.js - определение всех сцен игры с использованием DSL
 */

import { thread, scene, withText, withChoice, when, combineScenes } from '../dsl/core.js';
import { 
    withItem, withDoor, withExaminable, withUsable, withReturn,
    withRequiredChoice, withRewardChoice, withConsumingChoice, withSoundChoice
} from '../dsl/elements.js';
import { 
    createItemAndDoorRoom, createTreasureRoom, createLockedDoorRoom, createJunctionRoom
} from '../dsl/templates.js';

// Определение сцен с использованием DSL
const scenes = {
    // Начальная сцена
    start: thread(
	scene('start'),
	withText('Вы стоите перед огромным заброшенным замком. Холодный ветер пронизывает до костей, а тяжелые тучи нависли над древними башнями. Перед вами [массивная дверь] замка, слегка приоткрытая. Рядом с входом лежит [старая сумка].'),
	withDoor('массивная дверь', 'entrance_hall'),
	withItem('старая сумка', 'Факел'),
	withChoice('Войти в замок', 'entrance_hall'),
	withChoice('Осмотреться вокруг', 'outside_look')
    ),

    // Осмотр вокруг замка
    outside_look: thread(
	scene('outside_look'),
	withText('Оглядываясь вокруг, вы замечаете, что замок стоит на краю обрыва. Позади вас густой лес, а впереди только мрачное строение. Среди камней вы видите [блестящий предмет].'),
	withItem('блестящий предмет', 'Старинный ключ'),
	withReturn('Вернуться к входу', 'start'),
	withChoice('Войти в замок', 'entrance_hall')
    ),

    // Главный зал
    entrance_hall: thread(
	scene('entrance_hall'),
	withText('Вы входите в просторный зал с высоким потолком. Пыль кружится в лучах света, пробивающихся через витражные окна. Перед вами три двери: [левая дверь], [центральная дверь] и [правая дверь]. В углу зала стоит [старинный канделябр].'),
	withDoor('левая дверь', 'library'),
	withDoor('центральная дверь', 'throne_room', 'Старинный ключ'),
	withDoor('правая дверь', 'kitchen'),
	withExaminable('старинный канделябр'),
	withReturn('Вернуться наружу', 'start')
    ),

    // Библиотека
    library: thread(
	scene('library'),
	withText('Вы оказываетесь в древней библиотеке. Книжные полки достигают потолка, многие книги покрыты толстым слоем пыли. На центральном столе лежит [старинная книга] и [странный амулет]. У дальней стены находится [потайная дверь], видимая через небольшую щель в стене.'),
	withExaminable('старинная книга'),
	withItem('странный амулет', 'Защитный амулет'),
	withDoor('потайная дверь', 'secret_passage', 'Факел'),
	withReturn('Вернуться в главный зал', 'entrance_hall'),
	withChoice('Изучить книги', 'study_books')
    ),

    // Изучение книг
    study_books: thread(
	scene('study_books'),
	withText('Просматривая книги, вы находите одну с символом, похожим на герб замка. В ней говорится о секретном сокровище, спрятанном в тронном зале. Также упоминается, что для входа нужен специальный ключ и какой-то защитный талисман.'),
	withReturn('Вернуться к осмотру библиотеки', 'library')
    ),

    // Кухня - используем шаблон
    kitchen: createItemAndDoorRoom(
	'kitchen',
	'В старинной кухне пахнет сыростью и плесенью. Большой очаг давно остыл, а посуда покрыта пылью. На столе лежит [нож], а в углу стоит [деревянный сундук].',
	'нож', 'Старинный нож',
	'деревянный сундук', 'chest_opened'
    ),

    // Сундук на кухне - используем шаблон с дополнением
    chest_opened: thread(
	createTreasureRoom(
	    'chest_opened',
	    'Вы используете нож, чтобы открыть сундук. Внутри вы находите [золотую монету] и старый пергамент с картой замка.',
	    'золотую монету', 'Золотая монета',
	    'Вернуться на кухню', 'kitchen'
	),
	// Дополнительная логика - этот сундук можно открыть только ножом
	scene => ({
	    ...scene,
	    interactiveElements: scene.interactiveElements.map(el => 
		el.action === 'pickup' ? { ...el, requires: 'Старинный нож' } : el
	    )
	})
    ),

    // Тайный проход
    secret_passage: createLockedDoorRoom(
	'secret_passage',
	'Факел освещает узкий коридор. Стены здесь влажные, и вы слышите звук капающей воды. Коридор ведет вниз по винтовой лестнице к [железной двери].',
	'железной двери', null, 'dungeon',
	'Вернуться в библиотеку', 'library'
    ),

    // Подземелье
    dungeon: thread(
	scene('dungeon'),
	withText('Вы спускаетесь в подземелье замка. Здесь холодно и сыро. В центре комнаты стоит [каменный алтарь], а у стены висит [ржавый меч].'),
	withExaminable('каменный алтарь'),
	withItem('ржавый меч', 'Ржавый меч'),
	withReturn('Вернуться в тайный проход', 'secret_passage'),
	// Используем функцию-условие для монеты
	when(
            game => game.inventory && game.inventory.includes('Золотая монета'),
            // Применяем функцию с консумирующим выбором и звуком
            withConsumingChoice('Положить монету на алтарь', 'altar_activated', 'Золотая монета')
	)
    ),
    
    // Активация алтаря
    altar_activated: thread(
	scene('altar_activated'),
	withText('Как только вы кладете монету на алтарь, комната начинает дрожать. Часть стены отодвигается, открывая проход. Внутри вы видите [сундук с сокровищами].'),
	withItem('сундук с сокровищами', 'Древний артефакт'),
	withReturn('Вернуться в подземелье', 'dungeon'),
	withChoice('Исследовать потайной проход', 'hidden_passage')
    ),

    // Скрытый проход
    hidden_passage: thread(
	scene('hidden_passage'),
	withText('Этот тайный проход ведет вверх, в неизвестную часть замка. После короткого подъема вы оказываетесь в маленькой комнате за троном в тронном зале.'),
	withChoice('Войти в тронный зал', 'throne_room_back'),
	withReturn('Вернуться к сундуку', 'altar_activated')
    ),

    // Тронный зал (главный вход)
    throne_room: thread(
	scene('throne_room'),
	withText('Вы входите в величественный тронный зал. В центре стоит древний трон, украшенный драгоценными камнями. За троном вы замечаете [потайную дверь]. На троне лежит [королевская корона].'),
	withDoor('потайную дверь', 'hidden_passage'),
	withItem('королевская корона', 'Королевская корона'),
	withRequiredChoice('Сесть на трон', 'sit_on_throne', 'Защитный амулет'),
	withReturn('Вернуться в главный зал', 'entrance_hall')
    ),

    // Тронный зал (вход с обратной стороны)
    throne_room_back: thread(
	scene('throne_room_back'),
	withText('Вы выходите из-за трона и оказываетесь в тронном зале с другой стороны. Теперь вы видите трон спереди, во всем его величии.'),
	withRequiredChoice('Сесть на трон', 'sit_on_throne', 'Защитный амулет'),
	withReturn('Вернуться через потайной проход', 'hidden_passage'),
	withChoice('Уйти в главный зал', 'entrance_hall')
    ),

    // Трон
    sit_on_throne: thread(
	scene('sit_on_throne'),
	withText('Как только вы садитесь на трон, амулет на вашей шее начинает светиться. Внезапно, из подлокотников трона выдвигаются маленькие иглы, но амулет защищает вас. Часть пола перед троном отодвигается, открывая лестницу вниз к [сокровищнице].'),
	withDoor('сокровищнице', 'treasure_room', 'Древний артефакт'),
	withReturn('Встать с трона', 'throne_room')
    ),

    // Сокровищница - используем комбинацию двух шаблонов
    treasure_room: combineScenes(
	createTreasureRoom(
            'treasure_room',
            'Вы спускаетесь в сокровищницу замка. Горы золота, драгоценных камней и артефактов сверкают в свете вашего факела.',
            'сундук с драгоценностями', 'Сундук с сокровищами',
            'Продолжить осмотр', 'treasure_room_continue'
	),
	thread(
            scene('treasure_room_part2'),
            withText('В центре комнаты стоит [древний сундук], украшенный загадочными символами.'),
            withExaminable('древний сундук'),
            withReturn('Вернуться к трону', 'sit_on_throne') // Добавляем выход
	)
    ),

    // Продолжение исследования сокровищницы
    treasure_room_continue: thread(
	scene('treasure_room_continue'),
	withText('Вы продолжаете осматривать сокровищницу, поражаясь количеству богатств.'),
	withChoice('Взять сокровища и покинуть замок', 'ending')
    ),

    // Завершение игры
    ending: thread(
	scene('ending'),
	withText('С мешком драгоценностей вы покидаете древний замок. Теперь вы обладатель несметных богатств и секретных знаний, скрытых в этих стенах веками. Поздравляем, ваше приключение завершилось успехом!'),
	withChoice('Начать заново', 'start')
    )
};

export default scenes;
